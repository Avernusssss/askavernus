from aiogram import F, Router
from aiogram.filters import StateFilter
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

import logging

from handlers.common import BotStates
from services.ai_service import AIService
from services.translator import translate_text

# –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
router = Router()

@router.message(F.text == "üé® –ö–∞—Ä—Ç–∏–Ω–∫–∞")
async def image_button(message: Message, state: FSMContext):
    await message.answer("–ß–µ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å?")
    await state.set_state(BotStates.Img)

@router.message(StateFilter(BotStates.Img))
async def send_image(message: Message, ai_service: AIService):
    try:
        user_id = message.from_user.id
        user_input = await translate_text(str(message.text))
        msg = await message.answer("–ù—É–∂–Ω–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ, –ø–∞–∂–∂–∏")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        response = await ai_service.generate_image(user_input)
        await msg.edit_text(f"–ù–∞:\n{response.data[0].url}")
        
    except Exception as e:
        logger.error(f"Error in image generation: {e}", exc_info=True)
        await message.answer("–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –Ω–µ—Ç...") 