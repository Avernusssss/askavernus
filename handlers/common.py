from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

import os
from functools import lru_cache

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
class BotStates(StatesGroup):
    Chat = State()
    Img = State()
    ChooseModel = State()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
router = Router()

@lru_cache(maxsize=2)
def get_keyboard(is_admin=False):
    """–°–æ–∑–¥–∞–µ—Ç –∏ –∫—ç—à–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    keyboard = [
        [
            KeyboardButton(text="üí¨ –ß–∞—Ç"),
            KeyboardButton(text="üé® –ö–∞—Ä—Ç–∏–Ω–∫–∞"),
        ]
    ]
    
    if is_admin:
        keyboard.extend([
            [
                KeyboardButton(text="üìú –ò—Å—Ç–æ—Ä–∏—è"),
                KeyboardButton(text="ü§ñ –ú–æ–¥–µ–ª–∏ AI")
            ]
        ])
    else:
        keyboard.append([KeyboardButton(text="üìú –ò—Å—Ç–æ—Ä–∏—è")])
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        persistent=True
    )

def get_main_keyboard(message):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    is_admin = message and str(message.from_user.id) == os.getenv("ADMIN_ID")
    return get_keyboard(is_admin)

@router.message(Command('start'))
async def start_command(message: Message):
    await message.answer(
        "–í—ã–±–∏—Ä–∞–π —á–µ —Ç–µ –Ω–∞–¥–æ, –ø–µ–Ω—Ç—é—Ö",
        reply_markup=get_main_keyboard(message)
    )

@router.message(Command('file'))
async def send_last_response_as_file(message: Message, state: FSMContext):
    from utils.message_utils import send_as_file
    
    data = await state.get_data()
    last_response = data.get('last_full_response')
    
    if not last_response:
        await message.answer("–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
        return
    
    await message.answer("–í–æ—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:")
    await send_as_file(message, last_response, "full_response.txt") 